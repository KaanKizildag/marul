version: '3.7'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=tts-ms-elastic-cluster
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticData01:/var/lib/elasticsearch/data
    ports:
      - "9200:${ELASTIC_PORT}"
      - "9300:9300"
    networks:
      - ${GLOBAL_NETWORK:-elk}

  kibana:
    image: kibana:${ELK_VERSION}
    container_name: kibana
    restart: always
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:${ELASTIC_PORT}
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:${ELASTIC_PORT}","http://elastic-2:${ELASTIC_PORT}"]
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - ${GLOBAL_NETWORK:-elk}

  logstash:
    image: logstash:${ELK_VERSION}
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf/:/usr/share/logstash/pipeline/logstash.conf
      - ./wait-for-it.sh/:/usr/share/wait-for-it.sh
    entrypoint: [ "/usr/share/wait-for-it.sh", "-h", "elasticsearch", "-p", "${ELASTIC_PORT}", "-t", "120",
                  "--", "logstash", "-f", "/usr/share/logstash/pipeline/logstash.conf" ]
    depends_on:
      - elasticsearch
    ports:
      - "${LOGSTASH_PORT}:${LOGSTASH_PORT}"
    environment:
      - "LS_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - ${GLOBAL_NETWORK:-elk}

volumes:
  elasticData01:
    driver: local
  elasticData02:
    driver: local
networks:
  elk:
    driver: bridge