version: '3.7'
services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: marul
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres

  musteri-service:
    container_name: musteri-service
    image: marul/musteri-service
    build:
      context: ../musteri-service
      dockerfile: ../musteri-service/Dockerfile
    volumes:
      - "./wait-for-it.sh/:/usr/share/wait-for-it.sh"
    #    entrypoint: [ "usr/share/wait-for-it.sh", "-h", "${POSTGRES_HOST}", "-p", "${POSTGRES_PORT}", "-t", "120", "--", "java", "-jar", "app.jar" ]
    ports:
      - "${MUSTERI_SERVICE_PORT}:${MUSTERI_SERVICE_PORT}"
    environment:
      - APPNAME_MUSTERI_SERVICE=${APPNAME_MUSTERI_SERVICE}
      - MUSTERI_SERVICE_PORT=${MUSTERI_SERVICE_PORT}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - postgres
    networks:
      - postgres
    env_file: .env

  mail-service:
    container_name: mail-service
    image: marul/mail-service
    build:
      context: ../mail-service
      dockerfile: ../mail-service/Dockerfile
    ports:
      - "${MAIL_SERVICE_PORT}:${MAIL_SERVICE_PORT}"
    environment:
      - SERVICE_DISCOVERY_PORT=${SERVICE_DISCOVERY_PORT}
      - SERVICE_DISCOVERY_HOST=${SERVICE_DISCOVERY_HOST}
    networks:
      - postgres

  service-discovery:
    container_name: service-discovery
    image: marul/service-discovery
    build:
      context: ../servive-discovery
      dockerfile: ../servive-discovery/Dockerfile
    ports:
      - "${SERVICE_DISCOVERY_PORT}:${SERVICE_DISCOVERY_PORT}"
    networks:
      - postgres

  rapor-service:
    container_name: rapor-service
    image: marul/rapor-service
    build:
      context: ../rapor-service
      dockerfile: ../rapor-service/Dockerfile
    ports:
      - "${RAPOR_SERVICE_PORT}:${RAPOR_SERVICE_PORT}"
    environment:
      - LOGSTASH_PORT=${LOGSTASH_PORT}
      - LOGSTASH_SERVICE_HOST=${LOGSTASH_SERVICE_HOST}
      - RAPOR_SERVICE_HOST=${RAPOR_SERVICE_HOST}
      - RAPOR_SERVICE_PORT=${RAPOR_SERVICE_PORT}
      - RAPORLAR_DIZINI=${RAPORLAR_DIZINI}
      - SERVICE_DISCOVERY_HOST=${SERVICE_DISCOVERY_HOST}
      - SERVICE_DISCOVERY_PORT=${SERVICE_DISCOVERY_PORT}
    networks:
      - postgres

networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  elk:
    driver: bridge

volumes:
  postgres:
  pgadmin: